################################################################################
# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA Corporation and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA Corporation is strictly prohibited.
#
################################################################################

Refer to the DeepStream SDK documentation for a description of the plugin.
--------------------------------------------------------------------------------
Pre-requisites:
- GStreamer-1.0 Development package
- GStreamer-1.0 Base Plugins Development package
- OpenCV CUDA enabled Development package

Install using:
    $ sudo apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev 

Install OpenCV CUDA enabled Development package:
    $ cd ~
    $ git clone https://github.com/opencv/opencv.git
    $ git clone https://github.com/opencv/opencv_contrib.git
    $ cd ~/opencv
    $ mkdir build
    $ cd build
    $ cmake -D CMAKE_BUILD_TYPE=Release \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
        -D WITH_CUDA=ON \
        -D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
        -D WITH_CUDNN=ON \
        -D OPENCV_DNN_CUDA=ON \
        -D BUILD_EXAMPLES=ON ..
    $ make -j12
    $ sudo make install
    $ sudo ldconfig

--------------------------------------------------------------------------------
Compiling and installing the plugin:
Export or set in Makefile the appropriate cuda version using CUDA_VER
Run make and sudo make install

NOTE:
1. To compile the sources, run make with "sudo" or root permission.
2. The plugin when compiled and installed will replace the default 
   "libnvdsgst_dsexample.so" library demonstrating CPU operations.
3. The plugin is set to demostrate in-place operations on CUDA memory for
   devices that support it.
4. This plugin contains additional sample to demonstrate CUDA memory usecases.
   It uses OpenCV CUDA to perform in-place operations on CUDA memory.
5. To enable OpenCV in dsexample, set `WITH_OPENCV=1` in the plugin Makefile
   (/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-dsexample-cuda/Makefile)
   and follow compilation and installation instructions present in this README.
6. The plugin demonstrates two in-place usecases:
   Swap Channels: Swaps the color channels leading to change in visual output.
   Blur Objects: Applies a Gausian Filter on the detected objects.

--------------------------------------------------------------------------------
